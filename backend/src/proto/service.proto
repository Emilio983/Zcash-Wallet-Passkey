
syntax = "proto3";

package cash.z.wallet.sdk.rpc;

service CompactTxStreamer {
    rpc GetLatestBlock(ChainSpec) returns (BlockID) {}
    rpc GetBlock(BlockID) returns (CompactBlock) {}
    rpc GetBlockRange(BlockRange) returns (stream CompactBlock) {}
    rpc GetTransaction(TxFilter) returns (RawTransaction) {}
    rpc SendTransaction(RawTransaction) returns (SendResponse) {}
    rpc GetTaddressTxids(TransparentAddressBlockFilter) returns (stream RawTransaction) {}
    rpc GetTaddressBalance(AddressList) returns (Balance) {}
    rpc GetTaddressBalanceStream(stream Address) returns (Balance) {}
    rpc GetMempoolTx(Exclude) returns (stream CompactTx) {}
    rpc GetMempoolStream(Empty) returns (stream RawTransaction) {}
    rpc GetTreeState(BlockID) returns (TreeState) {}
    rpc GetAddressUtxos(GetAddressUtxosArg) returns (GetAddressUtxosReplyList) {}
    rpc GetAddressUtxosStream(GetAddressUtxosArg) returns (stream GetAddressUtxosReply) {}
    rpc GetLightdInfo(Empty) returns (LightdInfo) {}
    rpc Ping(Duration) returns (PingResponse) {}
}

message ChainSpec {
}

message BlockID {
    uint64 height = 1;
    bytes hash = 2;
}

message BlockRange {
    BlockID start = 1;
    BlockID end = 2;
}

message TxFilter {
    BlockID block = 1;
    uint64 index = 2;
    bytes hash = 3;
}

message RawTransaction {
    bytes data = 1;
    uint64 height = 2;
}

message SendResponse {
    int32 errorCode = 1;
    string errorMessage = 2;
}

message TransparentAddressBlockFilter {
    Address address = 1;
    BlockRange range = 2;
}

message Address {
    string address = 1;
}

message AddressList {
    repeated string addresses = 1;
}

message Balance {
    int64 valueZat = 1;
}

message Exclude {
    repeated bytes txid = 1;
}

message Empty {
}

message TreeState {
    string network = 1;
    uint64 height = 2;
    string hash = 3;
    uint32 time = 4;
    string saplingTree = 5;
    string orchardTree = 6;
}

message GetAddressUtxosArg {
    repeated string addresses = 1;
    uint64 startHeight = 2;
    uint32 maxEntries = 3;
}

message GetAddressUtxosReply {
    bytes txid = 1;
    int32 index = 2;
    bytes script = 3;
    int64 valueZat = 4;
    uint64 height = 5;
}

message GetAddressUtxosReplyList {
    repeated GetAddressUtxosReply addressUtxos = 1;
}

message LightdInfo {
    string version = 1;
    string vendor = 2;
    bool taddrSupport = 3;
    string chainName = 4;
    uint64 saplingActivationHeight = 5;
    string consensusBranchId = 6;
    uint64 blockHeight = 7;
    string gitCommit = 8;
    string branch = 9;
    string buildDate = 10;
    string buildUser = 11;
    uint64 estimatedHeight = 12;
    string zcashdBuild = 13;
    string zcashdSubversion = 14;
}

message Duration {
}

message PingResponse {
    int64 entry = 1;
    int64 exit = 2;
}

message CompactBlock {
    uint32 protoVersion = 1;
    uint64 height = 2;
    bytes hash = 3;
    bytes prevHash = 4;
    uint32 time = 5;
    bytes header = 6;
    repeated CompactTx vtx = 7;
}

message CompactTx {
    uint64 index = 1;
    bytes hash = 2;
    uint32 fee = 3;
    repeated CompactSaplingSpend spends = 4;
    repeated CompactSaplingOutput outputs = 5;
    repeated CompactOrchardAction actions = 6;
}

message CompactSaplingSpend {
    bytes nf = 1;
}

message CompactSaplingOutput {
    bytes cmu = 1;
    bytes ephemeralKey = 2;
    bytes ciphertext = 3;
}

message CompactOrchardAction {
    bytes nullifier = 1;
    bytes cmx = 2;
    bytes ephemeralKey = 3;
    bytes ciphertext = 4;
}
